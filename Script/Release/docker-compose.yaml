version: '3'

services:
  postgres:
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_DB: postgresdb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
      PGDATA: /var/lib/postgresql/data
    volumes:
      - db-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  pgadmin:
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@DSBD.com
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_LISTEN_PORT: 80
    ports:
      - "8080:80"
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    links:
      - "postgres:pgsql-server"

  zoo1:
    image: wurstmeister/zookeeper
    restart: always
    hostname: zoo1
    ports:
      - "2181:2181"
    environment:
      ZOO_MY_ID: 1
      ZOO_PORT: 2181
      ZOO_SERVERS: server.1=zoo1:2888:3888
    volumes:
      - ./zk-single-kafka-single/zoo1/data:/data
      - ./zk-single-kafka-single/zoo1/datalog:/datalog
      
  kafka-service:
    image: wurstmeister/kafka
    restart: always
    hostname: kafka1
    ports:
      - "9092:9092"
      #- "19092:19092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      #KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_LISTENERS: INTERNAL://:19092,EXTERNAL://:9092
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://:19092,EXTERNAL://:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      #KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CREATE_TOPICS: "auctions:10:1"
    volumes:
      - ./zk-single-kafka-single/kafka1/data:/var/lib/kafka/data
    depends_on:
      - zoo1

  kowl:
    image: quay.io/cloudhut/kowl:v1.2.2
    restart: on-failure
    hostname: kowl
    volumes:
    - ./config.yaml:/etc/kowl/config.yaml
    ports:
    - "3030:3030"
    entrypoint: ./kowl --config.filepath=/etc/kowl/config.yaml
    depends_on:
      - kafka-service

  discovery-service:
    image: unict/discovery-service:1.0.0
    restart: always
    ports:
      - "8761:8761"
    environment:
      - eureka_client_service-url_defaultZone=http://discovery-service:8761/eureka
    depends_on:
      - kafka-service

  gateway-service:
    image: unict/gateway-service:1.0.0
    restart: always
    ports:
      - "8088:8088"
    environment:
      - eureka_client_service-url_defaultZone=http://discovery-service:8761/eureka
    depends_on:
      - kafka-service

  auctionmanager-service:
    image: unict/auctionmanager:1.0.0
    restart: always
    ports:
      - "8083:8083"
    environment:
      - "SPRING_PROFILES_ACTIVE=docker"
      - eureka_client_service-url_defaultZone=http://discovery-service:8761/eureka
      - spring_datasource_url=jdbc:postgresql://postgres:5432/DSDB
      - spring_datasource_username=postgres
      - spring_datasource_password=root
    depends_on:
      - kafka-service

  sagaorchestration-service:
    image: unict/sagaorchestration:1.0.0
    restart: always
    ports:
      - "8081:8081"
    environment:
      - "SPRING_PROFILES_ACTIVE=docker"
      - eureka.client.service-url.defaultZone=http://discovery-service:8761/eureka
      - camel_component_kafka_brokers=kafka1-service:9092
    depends_on:
      - kafka-service

  walletmanager-service:
    image: unict/walletmanager:1.0.0
    restart: always
    ports:
      - "8084:8084"
    environment:
      - "SPRING_PROFILES_ACTIVE=docker"
      - eureka_client_service-url_defaultZone=http://discovery-service:8761/eureka
      - spring_datasource_url=jdbc:postgresql://postgres:5432/DSDB
      - spring_datasource_username=postgres
      - spring_datasource_password=root
    depends_on:
      - kafka-service

volumes:
  db-data:
  pgadmin-data: